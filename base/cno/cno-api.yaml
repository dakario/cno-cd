---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cno-api
  namespace: cno

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cno-api
subjects:
- kind: ServiceAccount
  name: cno-api
  namespace: cno
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    fluxcd.io/automated: 'true'
  labels:
    run: cno-api
  name: cno-api
  namespace: cno
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: cno-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp:
      labels:
        run: cno-api
    spec:
      containers:
      - image: beopenit/cno-api:v0.0.0.1.0d78da0
        imagePullPolicy: Always
        name: cno-api
        ports:
        - containerPort: 8081
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: IN_CLUSTER
          value: "true"
        - name: DB_HOST
          value: cno-api-mysql-master
        - name: SERVER_URL
          value: api.cno.beopenit.com
        - name: DB_USERNAME
          value: root
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cno-api-db-secret
              key: ROOT_PASSWORD
        volumeMounts:
        - name: kafkaconfig
          mountPath: "/root/.key"
          readOnly: true
      imagePullSecrets:
      - name: regcred
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: cno-api
      volumes:
      - name: kafkaconfig
        secret:
          secretName: kafkaconfig

---

apiVersion: v1
kind: Service
metadata:
  name: cno-api
  namespace: cno
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8081
  selector:
    run: cno-api
  sessionAffinity: None
  type: LoadBalancer

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  name: cno-api
  namespace: cno
spec:
  rules:
  - host: api.cno.beopenit.com
    http:
      paths:
      - backend:
          serviceName: cno-api
          servicePort: 80
  tls:
  - hosts:
    - api.cno.beopenit.com
    secretName: beopenit-cert

---

apiVersion: mysql.presslabs.org/v1alpha1
kind: MysqlCluster
metadata:
  name: cno-api
  namespace: cno
spec:
  replicas: 1
  secretName: cno-api-db-secret
  volumeSpec:
    persistentVolumeClaim:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: cno-api-mysql-master-external
  namespace: cno
spec:
  ports:
  - name: mysql
    port: 3306
    protocol: TCP
    targetPort: 3306
  - name: sidecar-http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/managed-by: mysql.presslabs.org
    app.kubernetes.io/name: mysql
    mysql.presslabs.org/cluster: cno-api
    role: master
  sessionAffinity: None
  type: LoadBalancer


